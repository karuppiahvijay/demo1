name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - staging

jobs:
  build-and-deploy:
    # Use self-hosted runner
    runs-on: [self-hosted, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Build frontend and backend Docker images
      - name: Build and Tag Images
        run: |
          docker build -t ${{ env.FRONTEND_IMAGE }}:${{ env.VERSION }} -t ${{ env.FRONTEND_IMAGE }}:latest ./frontend
          docker build -t ${{ env.BACKEND_IMAGE }}:${{ env.VERSION }} -t ${{ env.BACKEND_IMAGE }}:latest ./backend

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Images
        run: |
          docker push ${{ env.FRONTEND_IMAGE }}:${{ env.VERSION }}
          docker push ${{ env.FRONTEND_IMAGE }}:latest
          docker push ${{ env.BACKEND_IMAGE }}:${{ env.VERSION }}
          docker push ${{ env.BACKEND_IMAGE }}:latest

      # Setup kubectl on self-hosted runner
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Configure Kubernetes
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

      # Deploy to Kubernetes using Helm
      - name: Deploy to Kubernetes
        run: |
          if [[ $GITHUB_REF == refs/heads/dev ]]; then
            helm upgrade --install myapp ./mychart -f values.yaml --set global.environment=dev
          elif [[ $GITHUB_REF == refs/heads/staging ]]; then
            helm upgrade --install myapp ./mychart -f values.yaml --set global.environment=staging
          fi

